"""Home_sol By: Dexne

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XBEjebh2rjOr_QVmWFVVpYqdexoh37zp
"""

# Importamos paquetes
import numpy as np
import pandas as pd
from sklearn.svm import SVR
from sklearn.svm import SVC
from sklearn.neural_network import MLPRegressor
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split

# Leemos los datos
data = pd.read_csv('home_data.csv')

# Selecci칩n de variables
# Eliminamos los registros [ 'id', 'price', 'date', 'zipcode' ]
# Ya que no son muy relevantes para el an치lisis
x = np.array(data.drop(columns=['id', 'price', 'date', 'zipcode']))[:5000,:]
y = np.array(data[['price']])[:5000,:]

# Normalizamos los datos
x = MinMaxScaler().fit_transform(x)

# Train test split
xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.1)

## Crear modelo - Seleccionamos Regresi칩n lineal
#model = SVR(gamma=0.001, C=0.01, kernel='rbf')
model = LinearRegression()

# Entrenar modelo
model.fit( xtrain, ytrain.ravel() )

# Metricas de desempe침o
print('Train: ', model.score( xtrain, ytrain.ravel() ))
print('Train: ', model.score( xtest, ytest.ravel() ))

"""
Results:
Train:  0.6926109343701519
Train:  0.7329563273174166
"""
